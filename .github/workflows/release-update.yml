name: Update release with new tag and

on:
  workflow_dispatch:

  workflow_call:
    # inputs:
    #   asset_creating_script:
    #     required: true
    #     type: string
    #     default:  |
    #       zip -r asf.zip entrypoint.sh

    #       echo "FILES=`pwd`/asf.zip" >> $GITHUB_ENV

jobs:
  update_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 'Add last commit message to env'
        run: |
          continue=true
          pr_title="${{ github.event.pull_request.title }}"
          [ -z "${pr_title}" ] && continue=false

          pr_body="${{ github.event.pull_request.body }}"
          [ -z "${pr_body}" ] && continue=false
          
          echo "PR_TITLE="${pr_title}"" >> $GITHUB_ENV
          echo "PR_BODY="${pr_body}"" >> $GITHUB_ENV
          echo "CONTINUE="${continue}"" >> $GITHUB_ENV

      - name: 'Add last commit message to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          # last_commit_message=$(git log -1 --pretty=format:"%s")
          last_commit_message="${PR_TITLE}"
          echo "LAST_COMMIT_MESSAGE="${last_commit_message}"" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        if: ${{ env.CONTINUE == 'true' }}
        with:
          text: ${{ env.LAST_COMMIT_MESSAGE }}
          # Matches -r flag value, only M m and p characters
          regex: '(?<=(-r))[ |:|\\]*(?<value>[M|m|p]*)(?=[ |\\]|$)'
          # retreive flag value with ${{ steps.regex-match.outputs.group1 }}
      - name: 'Add last tag to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          echo "OPTION=${{ steps.regex-match.outputs.match }}" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        if: ${{ env.CONTINUE == 'true' }}
      - name: 'Add last tag to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          echo "NEW_TAG=${{ steps.get-latest-tag.outputs.tag }}" >> $GITHUB_ENV

      - name: 'Get level from option'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          case `echo $OPTION | xargs` in
            M) level="major";;
            m) level="minor";;
            p) level="patch";;
          esac
          echo "LEVEL="${level}"" >> $GITHUB_ENV

      - uses: actions-ecosystem/action-bump-semver@v1
        if: ${{ env.CONTINUE == 'true' }}
        id: bump-semver-patch
        with:
          current_version: ${{ env.NEW_TAG }}
          level: ${{ env.LEVEL }}
      - name: 'Add last tag to env'
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          echo "NEW_TAG=${{ steps.bump-semver-patch.outputs.new_version }}" >> $GITHUB_ENV

      - name: "Create environemnt variable"
        run: |
          echo "commit match ${{ env.OPTION }}"
          echo "release tag ${NEW_TAG}"

      - name: "Create assets"
        if: ${{ env.CONTINUE == 'true' }}
        run: |
          asdf="zip -r asf.zip entrypoint.sh
          echo "FILES=`pwd`/asf.zip" >> $GITHUB_ENV"
          
          eval "${asdf}"
          # eval ${{ github.event.inputs.asset_creating_script }} # Use when triggering from other repo wiht workflow_call

      - uses: meeDamian/github-release@2.0
        if: ${{ env.CONTINUE == 'true' }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.NEW_TAG }}
          name: Release ${{env.NEW_TAG}}
          body: ${{ env.PR_BODY }}
          gzip: false
          files: >
            ${{ env.FILES }}
